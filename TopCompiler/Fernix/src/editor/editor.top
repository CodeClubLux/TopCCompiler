import "ecs"
import "input"
import "key"
import "ui"
import "ui"
import "runner"
import "window"
import "model"
from "math" import Vec2
from "modelSettings" import (make_ModelSetting, model_settings_system)
import "layermask"
from "displayComponents" import (render_properties)
from "modelAssetTab" import (ModelAssetTab, make_ModelAssetTab)

type Editor =
    in_editor: bool
    selected: Maybe[ecs.ID]
    editor_tab_width: float
    asset_tab_height: float
    model_tab_width: float
    asset_tab: ModelAssetTab

asset_folder := "C:\\Users\\User\\Desktop\\TopCCompiler\\TopCompiler\\Fernix\\assets\\"
log "asset folder length {asset_folder.length}"

def Editor.update(&self) =
    inp := input.get_input!
    win := window.get_window!
    
    if inp.key_pressed key.from_char `P` then
        log "switch between editor and game"
        self.in_editor = not self.in_editor

    if inp.key_pressed key.from_char `X` then
        self.selected = match self.selected with
            Some id ->
                ecs.free_entity id
                None

            None -> None

    for file := win.dropped_filepaths do
        if not file.starts_with asset_folder then
            log "file {file} not in assets folder"
            continue

        new_context := *context
        new_context.allocator = context.longterm_storage

        #pushContext new_context do
            file = file.slice asset_folder.length, file.length

        id := ecs.make_ID!

        model_setting := make_ModelSetting id
        model_setting.filename = file

        model_setting.load!

        self.selected = Some id

        log "dropped file {file}"
        break

def Editor.select(&self, id: ecs.ID) =
    self.selected = Some id

def Editor.render(&self) =
    if not self.in_editor then return
    render_properties!

editor := Editor{
    in_editor = false
    selected = None
    editor_tab_width = 0.2
    asset_tab_height = 0.3
    model_tab_width = 0.2
    asset_tab = make_ModelAssetTab!
}

def in_editor() bool =
    editor.in_editor

def get_editor() &Editor =
    &editor