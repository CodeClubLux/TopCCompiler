import "shader"
import "math"
import "imageLoader"
import "runner"

type Param either
    Param_Vec3(string, math.Vec3)
    Param_Mat4x4(string, math.Mat4x4)
    Param_Image(string, imageLoader.Texture)

type Material =
    name: string
    shader: shader.Shader
    params: []Param

def Material.bind(&self) =
    params := &self.params

    self.shader.bind!

    runner.get_game!.set_shader_scene_params self.shader

    for i := 0..params.length do
        match params[i] with
            Param_Vec3 field, vector ->
                self.shader.set_vec3 field, &vector

            Param_Mat4x4 field, matrix ->
                self.shader.set_mat4x4 field, &matrix

            Param_Image field, texture ->
                texture.bind_to i+3
                self.shader.set_int field, i + 3


materials := [..]&Material

def material_by_name(name: string) Maybe[&Material] =
    for i := 0..materials.length do
        m := materials[i]

        if m.name == name then
            return Some m

    None

def get_materials() &[..]&Material =
    &materials
