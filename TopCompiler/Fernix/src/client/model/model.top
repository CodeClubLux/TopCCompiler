import "ecs"
import "layermask"
import "assetManager"
import "vfs"
import "transform"

models := ecs.make_Store_with_init::[Model] 10, Model{
    path = ""
    meshes = []
    materials = []
    bounding_box = BoundingBox{ 0, 0, 0, 0, 0, 0}
}, Some init_model

from "materialSystem" import Material

type BoundingBox =
    right: float
    left: float
    up: float
    down: float
    forward: float
    backwards: float

type Model =
    path: string
    meshes: []Mesh
    materials: []string
    bounding_box: BoundingBox

def init_model(self: &Model) =
    for i := 0..self.meshes.length do
        self.meshes[i].submit!

def make_Model(id: ecs.ID) &Model =
    entity := match ecs.entities.by_id id with
        Some x -> x
        None -> ecs.make_Entity id

    entity.layermask = layermask.make_Layermask!
    entity.layermask = entity.layermask.enable layermask.serialize_layer

    models.make id


//def get_models() &ecs.Store[Model] =
//    models


def Model.get_filename(&self) string =
    self.path

def Model.render_model_for(&self, trans: &transform.Transform, materials: []Material) =
    for i := 0..self.meshes.length do
        mesh := &self.meshes[i]
        mesh.render trans, materials
