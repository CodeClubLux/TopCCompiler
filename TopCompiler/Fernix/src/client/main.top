import "window"
import "runner"
import "time"
from "math" import all
import "buffer"
import "shader"
import "opengl"
import "texture"
import "model"
from "materialSystem" import all
import "ibl"
import "ecs"
import "input"
import "flyover"
import "camera"
import "editor"
import "draw"
from "transform" import all
import "physics"
import "fpsController"
import "bowWeapon"

// /*
wet_street_params := substance_params "wet_street", "Pebble_Wet_street"

cube_materials := [
    Material{
        name = "DefaultMaterial"
        shader = pbr_shader.get_id!
        params = &wet_street_params
        state = &draw.default_state
    }
]

def make_cube() =
    cube := model.load_model "sphere.fbx"

    id := ecs.make_ID!
    _ := ecs.make_Entity id

    cube_transform := make_Transform id
    cube_transform.position = Vec3{ 0, 5, -1}
    cube_transform.scale = Vec3{ 0.5, 0.5, 0.5 }

    mesh_renderer := model.make_ModelRenderer id
    mesh_renderer.model_id = Some model.models.id_of cube
    mesh_renderer.set_materials &cube_materials

    rb := physics.rigid_bodies.make id
    rb.shape = physics.Sphere 0.5 // Vec3{0.5,0.5,0.5}
    rb.mass = 1
    rb.continous = true

def make_floor_collider() =
    //floor collider
    id := ecs.make_ID!
    _ := ecs.make_Entity id

    floor_transform := make_Transform id
    floor_transform.position = Vec3{0,0,0}

    rb := physics.rigid_bodies.make id
    rb.shape = physics.Plane Vec3{ 0, 1, 0 }
    rb.mass = 0

def make_floor() =
    //floor mesh
    id := ecs.make_ID!
    _ := ecs.make_Entity id

    floor_transform := make_Transform id
    floor_transform.position = Vec3{0,0,0}
    floor_transform.scale = Vec3{100,1,100}
    floor_transform.rotation = make_quat (radians 90), Vec3{1,0,0}

    plane := model.load_model "plane.fbx"

    model_renderer := model.make_ModelRenderer id
    model_renderer.model_id = Some model.models.id_of plane
    model_renderer.set_materials &cube_materials


/*
make_floor_collider!
make_floor!
make_cube!
// */

fps_controller := fpsController.make_FPSController camera.cameras.id_of context.camera //in game
_ := bowWeapon.make_Bow camera.cameras.id_of context.camera

//editor.editor.select cube_entity.id

// */

log "running"

import "lights"
import "lister"

main_light := lights.get_dir_light!

if (lister.named.by_id lights.dir_lights.id_of main_light).is_none! then
    name := lister.named.make lights.dir_lights.id_of main_light
    name.name = "dirLight"


/*
log "===================================================================="
m := model.load_model "pine_tree2.fbx"
model.load_in_place m
log m.materials
log "==================================================================="
*/

//model.load_in_place model.load_model "bow.fbx"

skybox := ibl.make_Skybox ecs.make_ID!, "LA_Downtown_Helipad_GoldenHour_3k.hdr"

runner.init!