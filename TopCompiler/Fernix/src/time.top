#if {"headless": true}

ext _ = "#include<time.h>"

type Clock_t is i64

ext clock_gettime: || -> Clock_t = "clock"
ext clocks_per_sec: Clock_t = "CLOCKS_PER_SEC"

def get_time() f64 =
    clock_gettime! / clocks_per_sec

#endif
#if {"headless": false}
import "glfwWrapper"

def get_time() f64 =
    glfwWrapper.getTime!
#endif

type Time =
    last_frame: f64
    delta_time: f64

#addToContext time := box Time{
    last_frame = 0
    delta_time = 0
}

def update_delta_time() =
    current_frame := get_time!

    context.time.delta_time = current_frame - context.time.last_frame
    context.time.last_frame = current_frame

def get_delta_time() float =
    context.time.delta_time cast float