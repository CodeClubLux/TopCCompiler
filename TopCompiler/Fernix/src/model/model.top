import "ecs"
import "layermask"
import "assetManager"
import "vfs"

type Model =
    entity: &ecs.Entity
    path: string
    meshes: [..]Mesh

model_system := ecs.make_Store::[Model] make_Model, 10

def make_Model(id: ecs.ID) &Model =
    entity := ecs.make_Entity id

    match ecs.entity_system.component_by_id id with
        Some x -> x
        None -> ecs.make_Entity id

    entity.layermask = layermask.make_Layermask!

    model_system.add_component Model{
        entity = entity
        path = ""
        meshes = [..]Mesh
    }

def get_model_system() &ecs.Store[Model] =
    model_system

def Model.update(&self) =
def Model.render(&self) =
def Model.get_entity(&self) &ecs.Entity =
    self.entity

def Model.get_filename(&self) string =
    self.path

def Model.render_model_for(&self, entity: &ecs.Entity) =
    meshes := self.meshes

    for i := 0..meshes.length do
        mesh := meshes[i]
        mesh.render entity


//setup model renderer system
model_renderer_system := ecs.make_Store make_ModelRenderer, 10

def make_ModelRenderer(id: ecs.ID) &ModelRenderer =
    entity := match ecs.entity_system.component_by_id id with
        Some e -> e
        None -> ecs.make_Entity id

    model_renderer_system.add_component ModelRenderer{
        entity = entity
        model = None
        visible = true
    }
