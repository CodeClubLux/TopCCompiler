import "ecs"
import "layermask"
import "assetManager"
import "vfs"

model_system := ecs.make_Store::[Model] make_Model, 10

from "materialSystem" import Material

type BoundingBox =
    right: float
    left: float
    up: float
    down: float
    forward: float
    backwards: float

type Model =
    entity: &ecs.Entity
    path: string
    meshes: []Mesh
    materials: []string
    bounding_box: BoundingBox

def make_Model(id: ecs.ID) &Model =
    entity := ecs.make_Entity id

    match ecs.entity_system.component_by_id id with
        Some x -> x
        None -> ecs.make_Entity id

    entity.layermask = layermask.make_Layermask!

    model_system.add_component Model{
        entity = entity
        path = ""
        meshes = []
        materials = []
        bounding_box = BoundingBox{ 0, 0, 0, 0, 0, 0}
    }

def get_model_system() &ecs.Store[Model] =
    model_system

def Model.update(&self) =
def Model.render(&self) =
def Model.get_entity(&self) &ecs.Entity =
    self.entity

def Model.get_filename(&self) string =
    self.path

def Model.render_model_for(&self, entity: &ecs.Entity, materials: []Material) =
    meshes := self.meshes

    for i := 0..meshes.length do
        mesh := meshes[i]
        mesh.render entity, materials
