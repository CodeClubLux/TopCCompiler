import "model"
import "opengl"
import "buffer"
from "materialSystem" import all
import "shader"

material_list := [Material{
    name = "DefaultMaterial"
    shader = shader.make "assets/shaders/pbr.vert", "assets/shaders/pbr.frag"
    params = []
}]

cube := model.load_model "assets/cube.fbx", &material_list
sphere := model.load_model "assets/sphere.fbx", &material_list
plane := model.load_model "assets/plane.fbx", &material_list

def render_cube() =
    self := cube.meshes[0]

    self.buffer.bind!
    opengl.drawElements opengl.triangles, self.indices.length, opengl.unsigned_int, 0

def render_sphere() =
    self := sphere.meshes[0]

    self.buffer.bind!
    opengl.drawElements opengl.triangles, self.indices.length, opengl.unsigned_int, 0

def render_quad() =
    self := plane.meshes[0]

    self.buffer.bind!
    opengl.drawElements opengl.triangles, self.indices.length, opengl.unsigned_int, 0

