//import "html"
//import "math"
/*
let app-state = newAtom \[10: 0]

//hh

//Counter
let add = html.ignoreAct 1+
let sub = html.ignoreAct _ - 1

def counter(model: int, a: Atom[int]) html.VNode =
    html.div html.noAttrib,
        [ html.button \[html.on-click add, a], "+"
        , "Counter {model}"
        , html.button \[html.on-click sub, a], "-"
        ]

//Dynamic Counter
let add-counter = html.ignoreAct append 0

def view(model: []int, a: Atom[[]int]) html.VNode =
    html.div html.noAttrib,
        [ html.h1 html.noAttrib, "Dynamic Counter Example"
        , html.div html.noAttrib, (html.mapView counter, model, a) //hello
        , html.button \[html.onClick add-counter, a], "Add"
        ]

def mapF[X](x: |int| -> X) X =
    x 10


def serial[T](x: []|| do T) []T do
    var i = 0
    var arr = []T
    while (i < x.length) do
        arr = arr.append x[i]!
        i += 1

    arr
*/

def get() string do
    "hello world"

def test() do
    println get!

test!

//html.app view, app-state