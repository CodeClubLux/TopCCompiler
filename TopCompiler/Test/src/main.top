val : Maybe[int] = None
val2 : Maybe[int] = None
val3 : Maybe[int] = None


if Some i := val then
    log "some {i}"
elif Some i := val2 then
    log "some 2 {i}"
elif Some i := val3 then
    log "some 3 {i}"
else
    log "hey!"

//else
//    log "else"

//else
//    log "ten"

/*
match val with
    Some i ->
        log "some {i}"
    None ->
        log "ten"
*/




/*
type Transform =
    using entity: &ecs.Entity
    position: Vec3
    rotation: Quat
    scale: Vec3

transform_system := ecs.make_Store::[Transform] 10
transform_system := ecs.make_Parallel

def make_Transform(id: ecs.ID) =
    transform_system.add_component Entity{
        entity = (ecs.entity_system.component_by_id id).expect "Transform requires entity component"
        position = Vec3{0,0,0}
        rotation = make_Quat!
        scale = Vec3{1,1,1}
    }

def Transform.render(&self) =
    log transform.position
*/