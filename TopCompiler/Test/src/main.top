import "window"
from "math" import all
import "buffer"
import "gi"
import "shader"
import "opengl"
import "imageLoader"
import "modelLoading"
import "scene"
from "materialSystem" import all
import "ibl"

wet_street_params := [
    Param_Image "material.diffuse", imageLoader.load "assets/wet_street/Pebble_Wet_street_basecolor.jpg"
    Param_Image "material.metallic", imageLoader.load "assets/wet_street/Pebble_Wet_street_metallic.jpg"
    Param_Image "material.roughness", imageLoader.load "assets/wet_street/Pebble_Wet_street_roughness.jpg"
    Param_Image "material.normal", imageLoader.load "assets/wet_street/Pebble_Wet_street_Normal_Map.jpg"
]

wet_street := box Material{
    name = "DefaultMaterial"
    shader = shader.make "assets/shaders/pbr.vert", "assets/shaders/pbr.frag"
    params = &wet_street_params
}

materials.append wet_street
model := modelLoading.load_model "assets/cube.fbx"

//setting up the shader
my_shader := shader.make "assets/vertex.vert", "assets/fragment.frag"

identity := math.identity_mat!

skybox := ibl.make_Skybox!

type ExampleScene =

def ExampleScene.render(&self) =
    skybox.render!
    model.render!

def ExampleScene.set_scene_params_for(&self, _shader: shader.Shader) =
    skybox.set_ibl_params_for _shader

def ExampleScene.update(&self) =

example_scene := ExampleScene{}
context.scene.init box &example_scene as scene.Game
