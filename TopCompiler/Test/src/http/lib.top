type Server =
    listen: |int| do none

type NodeHTTP =
    createServer: ||Request, Response| -> none| -> Server

type Request =
    url: string

type Response =
    status: int
    content-type: string
    body: string

def Response.toString(self) string =
    "Response({self.status}, {self.content-type}, {self.body})"

let response = Response {
    status = 200
    content-type = "text/plain"
    body = ""
}

ext node port: int = "process.env.PORT || 3000"
ext client get: |string| do Response = "_http_get"

ext node server: ||Request| do Response| -> Server = "server_createServer"
ext node handleQuery: [T: enum]|string, |T| do Response| do Response = "server_handleQuery"
ext node isQuery: |string| -> bool = "server_isQuery"