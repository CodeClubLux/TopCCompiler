function main_clientInit(){var d=0;return function c(b){while(1){switch (d){case 0:http_clientInit();html_clientInit();main_PosAtom= typeof html_PosAtom=='undefined'||html_PosAtom;main_h1= typeof html_h1=='undefined'||html_h1;main_onChange= typeof html_onChange=='undefined'||html_onChange;main_input= typeof html_input=='undefined'||html_input;main_span= typeof html_span=='undefined'||html_span;main_p= typeof html_p=='undefined'||html_p;main_br= typeof html_br=='undefined'||html_br;main_button= typeof html_button=='undefined'||html_button;main_app= typeof html_app=='undefined'||html_app;main_value= typeof html_value=='undefined'||html_value;main_div= typeof html_div=='undefined'||html_div;main_style= typeof html_style=='undefined'||html_style;main_render= typeof html_render=='undefined'||html_render;main_onClick= typeof html_onClick=='undefined'||html_onClick;main_Event= typeof html_Event=='undefined'||html_Event;main_mapView= typeof html_mapView=='undefined'||html_mapView;main_toEffect= typeof html_toEffect=='undefined'||html_toEffect;main_unique = main_for.bind(null,((function(main_elem, main_indiv){;return (function(){if((!((main_indiv).has(main_elem)))){return [(Some(main_elem)),(main_indiv).append(main_elem)];}
else{return [None,main_indiv];}})();})),EmptyVector);main_sort = function(arr){
    return fromArray(arr.toArray().sort(function(x,y){
        return x > y
    } ));
} ;main__console = console.log;main_enter = (function(main_x, main_ev,f){var j=0;return function h(g){while(1){switch(j){case 0:;return f(parseJson(core_json_vector(core_json_float),(((("[")+((((main_ev).target).value)).toString()))+("]").toString())));}}}()});main_math = (function(main_x, main_a){;return main_div(EmptyVector,newVector(main_input(newVector((main_onChange(main_enter,main_a)),(main_value((main_x).join(", ")))),""),main_answer(main_x)));});main_appState = newAtom(newVector(0.0));log((dict(newVector([0,10],[10,30]))).get(0));d=6;return main_app(main_math,main_appState,c);case 6:;return;}}}()}var main_unique;var main_sort;var main__console;var main_enter;var main_math;var main_appState;var main_PosAtom;var main_h1;var main_onChange;var main_input;var main_span;var main_p;var main_br;var main_button;var main_app;var main_value;var main_div;var main_style;var main_render;var main_onClick;var main_Event;var main_mapView;var main_toEffect;function main_for(main_func, main__state, main_arr){var main_state;main_state = main__state;var main_new;main_new = EmptyVector;var main_length;main_length = (main_arr).length;var main_i;main_i = 0;
while((main_i<main_length)){var main_tx;main_tx = main_func(main_arr.get(main_i),main_state);var main_t;main_t = (main_tx)[0];main_state=(main_tx)[1];main_new=function(){var c=main_t; if (c[0]==0){var main_tmp=c[1];return (main_new).append(main_tmp);} if (c[0]==1){return main_new;}}();main_i=((main_i+1)|0);};return main_new;}function main_median(main_x){var main_length;main_length = (main_x).length;var main_tmp;main_tmp = main_sort(main_x);;return (function(){if((((main_length%2)|0)===0)){return (((main_tmp.get(((main_length/2)|0))+main_tmp.get(((((main_length/2)|0)-1)|0))))/2.0);}
else{return main_tmp.get((((((main_length-1)|0))/2)|0));}})();}function main_average(main_x){;return (((main_x).reduce((operator_add)))/toFloat((main_x).length));}function main_debug(main_x){main__console((main_x).toString());;return main_x;}function main_mode(main_x){var main_uniques;main_uniques = (main_unique(main_x));var main_u;main_u = (main_uniques).map((function(main_i){;return [(((("")+((main_i)).toString()))+("").toString()),(((main_x).filter(operator_eq.bind(null,main_i)))).length,0];}));var main_count;main_count = (main_u).reduce((function(main_a, main_b){;return (function(){if(((main_a)[1]>(main_b)[1])){return main_a;}else if(((main_a)[1]===(main_b)[1])){return ["b",(main_b)[1],(((main_a)[2]+1)|0)];}
else{return main_b;}})();}));var main__;main__ = main_debug((main_count)[2]);;return (function(){if(((main_count)[2]===(((main_uniques).length-1)|0))){return "n";}
else{return (main_count)[0];}})();}function main_answer(main_x){;return main_div(EmptyVector,newVector(main_h1(EmptyVector,toString(main_x)),main_h1(EmptyVector,(((("Mean ")+((main_average((main_x).map(toFloat)))).toString()))+("").toString())),main_h1(EmptyVector,(((("Median ")+((main_median((main_x).map(toFloat)))).toString()))+("").toString())),main_h1(EmptyVector,(((("Mode ")+((main_mode(main_x))).toString()))+("").toString()))));}function main_test(main_func, main_x){;return toString(main_func(main_x));}function main_Point(c,d){this.x=c;this.y=d;}main_Point._fields=["x","y"];function main_getPoint(main_x){;return main_x;}