function three_Init(){var d=0;return function c(b){while(1){switch (d){case 0:three_positionX = three_newAttrib.bind(null,"position.x");three_positionY = three_newAttrib.bind(null,"position.y");three_positionZ = three_newAttrib.bind(null,"position.z");three_rotationX = three_newAttrib.bind(null,"rotation.x");three_rotationY = three_newAttrib.bind(null,"rotation.y");three_rotationZ = three_newAttrib.bind(null,"rotation.z");three_wireframe = three_newMaterialAttrib.bind(null,"wireframe");three_color = three_newMaterialAttrib.bind(null,"color");three_phongMaterial = th_meshPhongMaterial;three_scene = th_scene;three_gameLoop = th_fps;three__renderer = th_init;three_renderGl = th_render;three_perspectiveCamera = th_perspectiveCamera;three_boxGeometry = th_BoxGeometry;three_sphereGeometry = th_SphereGeometry;three_hemisphereLight = th_hemisphereLight;three_mesh = th_mesh;three_combineMeshes = th_combineMeshes;three_patch = th_patch;three_toDom = th_toThreeObject;three_newVec = th_vec3;three_shape = three_newBodyAttrib.bind(null,"shape");three_mass = three_newBodyAttrib.bind(null,"mass");three_position = three_newBodyAttrib.bind(null,"position");three_linearDamping = three_newBodyAttrib.bind(null,"linearDamping");three_body = th_body;three_sphere = th_sphere;three_plane = th_plane;three_box = th_box;three_world = th_world;three_vec3 = th_vec3;three_physics = th_physics;return;}}}()}var three_positionX;var three_positionY;var three_positionZ;var three_rotationX;var three_rotationY;var three_rotationZ;var three_wireframe;var three_color;var three_phongMaterial;var three_scene;var three_gameLoop;var three__renderer;var three_renderGl;var three_perspectiveCamera;var three_boxGeometry;var three_sphereGeometry;var three_hemisphereLight;var three_mesh;var three_combineMeshes;var three_patch;var three_toDom;var three_newVec;var three_shape;var three_mass;var three_position;var three_linearDamping;var three_body;var three_sphere;var three_plane;var three_box;var three_world;var three_vec3;var three_physics;function three_Point(f,g,h){this.x=f;this.y=g;this.z=h;}three_Point.fields=newVector("x","y","z");function three_Renderer(){}three_Renderer.fields=newVector();function three_Scene(){}three_Scene.fields=newVector();function three_Material(){}three_Material.fields=newVector();function three_Camera(j,k){this.position=j;this.rotation=k;}three_Camera.fields=newVector("position","rotation");function three_Mesh(l,m){this.position=l;this.rotation=m;}three_Mesh.fields=newVector("position","rotation");function three_Geometry(){}three_Geometry.fields=newVector();function three_Attribute(n,p){this.name=n;this.value=p;}three_Attribute.fields=newVector("name","value");function three_MaterialAttr(q,r){this.name=q;this.value=r;}three_MaterialAttr.fields=newVector("name","value");function three_newAttrib(c, d){return new three_Attribute(c,d,d);}function three_newMaterialAttrib(c, d){return new three_MaterialAttr(c,d,d);}function three_COLOR(s,t,v){this.r=s;this.g=t;this.b=v;}three_COLOR.fields=newVector("r","g","b");function three_ThreeObject(){}three_ThreeObject.fields=newVector();function three_render(c, d, f, g, h,j){var n;var p;var q;var r;var m=0;return function l(k){while(1){switch(m){case 0:n = three__renderer(f);m=1;return g.unary_read(l);case 1:;p = c(k,g);q = three_toDom((p)[0]);r = three_toDom((p)[1]);function s(t,v){var y=0;return function x(w){while(1){switch(y){case 0:y=2;return g.unary_read(x);case 2:;y=3;return d(w,t,x);case 3:y=4;return (g).operator_set(w,x);case 4:y=5;return sleep(0,x);case 5:return v(w);}}}()}function z(B){var G;var H;var F=0;return function D(C){while(1){switch(F){case 0:F=6;return g.unary_read(D);case 6:;G = c(C,g);H = three_patch(p,G,q,r);q=(H)[0];r=(H)[1];p=G;F=7;return three_renderGl(n,q,r,D);case 7:return B(C);}}}()}m=8;return three_renderGl(n,q,r,l);case 8:three_gameLoop(s,h,z);return j();}}}()}function three_World(){}three_World.fields=newVector();function three_Vec3(w,x,y){this.x=w;this.y=x;this.z=y;}three_Vec3.fields=newVector("x","y","z");function three_Body(z,B){this.position=z;this.mass=B;}three_Body.fields=newVector("position","mass");function three_Shape(){}three_Shape.fields=newVector();function three_BodyAttr(C,D){this.name=C;this.value=D;}three_BodyAttr.fields=newVector("name","value");function three_newBodyAttrib(c, d){return new three_BodyAttr(c,d,d);}